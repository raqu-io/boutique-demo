# Copyright 2022 Raqu LTD
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


name: "Pull Request Opened - Continuous Release"
on:
  pull_request:
    types: [opened, reopened]
jobs:
  code-tests:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        service: [ "productcatalogservice", "shippingservice" ]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.17.5'
      - name: Go Unit Tests
        timeout-minutes: 10
        run: |
            echo "testing ${{ matrix.service }}..."
            cd src/${{ matrix.service }}
            go test
  build-images:
    runs-on: [ubuntu-latest]
    needs: code-tests
    strategy:
      matrix:
        service: ["adservice", "cartservice", "checkoutservice", "currencyservice", "emailservice", "frontend", "paymentservice", "productcatalogservice", "recommendationservice", "shippingservice"]
      fail-fast: true
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            raquio/${{ matrix.service }}
          tags: |
            type=sha
      -
        uses: docker/build-push-action@v3
        name: Build
        timeout-minutes: 20
        with:
          push: true
          context: src/${{ matrix.service }}
          file: src/${{ matrix.service }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
  deploy:
    runs-on: [ubuntu-latest]
    container:
      image: raquio/deployer:v0.0.15
      options: --user root
    needs: build-images
    strategy:
      matrix:
        service: ["adservice", "cartservice", "checkoutservice", "currencyservice", "emailservice", "frontend", "paymentservice", "productcatalogservice", "recommendationservice", "shippingservice"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PACK_REGISTRY_DEPLOY_KEY }}
      -
        name: deploy
        timeout-minutes: 10
        run: |
            git config --global --add safe.directory /__w/boutique-demo/boutique-demo
            TAG="sha-$(git rev-parse --short HEAD)"
            deployer --conf src/${{ matrix.service }}/deploy/prod.hcl \
                     --nomad-addr ${{ secrets.NOMAD_ADDR }} \
                     --consul-addr ${{ secrets.CONSUL_HTTP_ADDR }} \
                     --consul-token ${{ secrets.CONSUL_HTTP_TOKEN }} \
                     --extra-vars="--var=service_version=$TAG"

            if [ "${{ matrix.service }}" == "cartservice" ]; then
              deployer --conf src/${{ matrix.service }}/deploy/redis.hcl \
                               --nomad-addr ${{ secrets.NOMAD_ADDR }} \
                               --consul-addr ${{ secrets.CONSUL_HTTP_ADDR }} \
                               --consul-token ${{ secrets.CONSUL_HTTP_TOKEN }}
            fi