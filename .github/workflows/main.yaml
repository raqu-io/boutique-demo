# Copyright 2022 Raqu LTD
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


name: "Main - Continuous Release"
on:
  push:
    # run on pushes to main or release/*
    branches:
      - main
jobs:
  generate-release:
    runs-on: [ ubuntu-latest ]
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Conventional Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          skip-commit: "true"
          output-file: "false"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
  generate-matrix:
    name: Generate job matrices
    runs-on: ubuntu-latest
    outputs:
      matrix-services: ${{ steps.services.outputs.matrix }}
    steps:
      - name: Generate matrix | Services
        id: services
        uses: hellofresh/action-changed-files@v2.1
        with:
          pattern: src/(?P<service>[^/]+)
  build-images:
    needs: [generate-matrix, generate-release]
    runs-on: [ubuntu-latest]
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix-services) }}
      fail-fast: true
    if: ${{ fromJson(needs.generate-matrix.outputs.matrix-services).include[0] }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx
          restore-keys: |
            ${{ runner.os }}-single-buildx

      -
        uses: docker/build-push-action@v3
        name: Build
        timeout-minutes: 20
        with:
          push: true
          context: src/${{ matrix.service }}
          file: src/${{ matrix.service }}/Dockerfile
          tags: raquio/${{ matrix.service }}:${{ needs.generate-release.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      -
        name: Move cache
        run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    needs: [ generate-matrix, generate-release, build-images ]
    runs-on: [ ubuntu-latest ]
    container:
      image: raquio/deployer:latest
      options: --user root
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix-services) }}
      fail-fast: true
    if: ${{ fromJson(needs.generate-matrix.outputs.matrix-services).include[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PACK_REGISTRY_DEPLOY_KEY }}
      - name: deploy
        timeout-minutes: 10
        run: |
          git config --global --add safe.directory /__w/boutique-demo/boutique-demo
          deployer --conf src/${{ matrix.service }}/deploy/common.hcl \
                   --conf src/${{ matrix.service }}/deploy/prod.hcl \
                   --nomad-addr ${{ secrets.NOMAD_ADDR }} \
                   --consul-addr ${{ secrets.CONSUL_HTTP_ADDR }} \
                   --consul-token ${{ secrets.CONSUL_HTTP_TOKEN }} \
                   --extra-vars="--var=service_version=${{ needs.generate-release.outputs.tag }}"

          if [ "${{ matrix.service }}" == "cartservice" ]; then
            deployer --conf src/${{ matrix.service }}/deploy/redis.hcl \
                             --nomad-addr ${{ secrets.NOMAD_ADDR }} \
                             --consul-addr ${{ secrets.CONSUL_HTTP_ADDR }} \
                             --consul-token ${{ secrets.CONSUL_HTTP_TOKEN }}
          fi